name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install minimal dependencies for testing
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-minimal.txt
    
    - name: Create required directories
      run: |
        mkdir -p output
        mkdir -p config
    
    - name: Check code formatting with Black
      run: |
        black --check newsletter tests
    
    - name: Run minimal tests (no external dependencies)
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python -m pytest tests/test_minimal.py -v --tb=short
        
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install all dependencies
      timeout-minutes: 10
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -e . --no-deps
    
    - name: Set up test environment
      run: |
        mkdir -p output
        mkdir -p config
        echo "GEMINI_API_KEY=dummy_key_for_testing" > .env
        echo "SERPER_API_KEY=dummy_key_for_testing" >> .env
        # Set gRPC environment variables
        echo "GRPC_DNS_RESOLVER=native" >> $GITHUB_ENV
        echo "GRPC_POLL_STRATEGY=epoll1" >> $GITHUB_ENV
        echo "GOOGLE_API_USE_REST=true" >> $GITHUB_ENV
        echo "GRPC_ENABLE_FORK_SUPPORT=0" >> $GITHUB_ENV
    
    - name: Run integration tests with mocked APIs
      env:
        PYTHONPATH: ${{ github.workspace }}
        GEMINI_API_KEY: "dummy_key_for_testing"
        SERPER_API_KEY: "dummy_key_for_testing"
      run: |
        python -m pytest tests/test_tools.py -v --tb=short --maxfail=3
  
  # 참고: code-quality.yml 워크플로우에서 코드 품질 검사(Black)를 실행합니다.
  # 이 CI 워크플로우는 테스트에만 집중합니다.
  
  # 향후 안정화된 후 전체 테스트 추가 예정입니다.
  
  # 향후 다른 테스트를 추가할 경우를 위한 작업 예시
  # full_tests:
  #   name: Run Full Test Suite
  #   runs-on: ubuntu-latest
  #   needs: minimal_tests
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'
  #   
  #   - name: Install all dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install -r requirements.txt
  #       python -m pip install pytest pytest-cov pytest-mock
  #   
  #   - name: Set up test environment
  #     run: |
  #       mkdir -p output
  #       # 필요한 환경 변수 설정
  #       echo "GEMINI_API_KEY=dummy_key_for_testing" >> $GITHUB_ENV
  #       echo "SERPER_API_KEY=dummy_key_for_testing" >> $GITHUB_ENV
  #   
  #   - name: Run full test suite
  #     env:
  #       PYTHONPATH: ${{ github.workspace }}
  #     run: |
  #       # 전체 테스트 실행 또는 개별 테스트 지정 가능
  #       # python -m pytest tests/ 
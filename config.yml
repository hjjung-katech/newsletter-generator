# GitHub Actions Newsletter Configuration
# Customize this file for your newsletter.

# General newsletter settings
newsletter_settings:
  # Title for the newsletter (used in email subject, etc.)
  title: "오늘의 주요 뉴스 업데이트"
  
  # Newsletter branding and metadata
  newsletter_title: "주간 산업 동향  뉴스 클리핑"
  tagline: "이번 주, 주요 산업 동향을 미리 만나보세요."
  
  # Company/Organization information
  publisher_name: "산업통상자원 R&D 전략기획단"
  company_name: "산업통상자원 R&D 전략기획단"
  company_tagline: "최신 기술 동향을 한눈에"
  
  # Editor information
  editor_name: "Google Gemini"
  editor_title: "편집자"
  editor_email: "hjjung2@osp.re.kr"
  
  # Footer settings
  footer_disclaimer: "이 뉴스레터는 정보 제공을 목적으로 하며, 내용의 정확성을 보장하지 않습니다."
  footer_contact: "문의사항: hjjung2@osp.re.kr"

  # Keyword settings for 'newsletter run'
  # Option 1: Provide direct keywords
  keywords: ["인공지능", "자율주행", "반도체"]
  # Option 2: Or specify a domain for automatic keyword suggestion
  # domain: "스마트팩토리"
  # suggest_count: 5 # Number of keywords to suggest if domain is used

  # Output format for the newsletter file
  output_format: "html" # 'html' or 'md'
  # Path where the newsletter file will be saved (relative to repository root)
  # The GitHub Actions workflow expects this path.
  output_directory: "./output" # The script should create newsletter.html or newsletter.md here

# LLM Configuration - 기능별 LLM 모델 설정
llm_settings:
  # 기본 설정 - 사용 가능한 제공자로 변경
  default_provider: "gemini"  # 기본 LLM 제공자: gemini, openai, anthropic
  
  # 제공자별 API 키 설정 (환경변수 이름)
  api_keys:
    gemini: "GEMINI_API_KEY"
    openai: "OPENAI_API_KEY"
    anthropic: "ANTHROPIC_API_KEY"
  
  # 기능별 LLM 모델 설정 - 최신 모델 우선 시도, 문제 시 안정적인 모델로 fallback
  models:
    # 키워드 생성 (도메인 → 키워드) - 창의성이 중요하므로 Anthropic 사용
    keyword_generation:
      provider: "gemini"
      model: "gemini-2.5-pro-preview-03-25"
      # provider: "anthropic"
      # model: "claude-3-7-sonnet-latest"
      temperature: 0.7
      max_retries: 2
      timeout: 60
    
    # 테마 추출 (키워드 → 공통 테마) - 빠른 분석이 중요하므로 Gemini Flash 사용
    theme_extraction:
      provider: "gemini"
      model: "gemini-2.5-flash-preview-05-20"
      temperature: 0.2
      max_retries: 2
      timeout: 60
    
    # 뉴스 요약 (기사 → 요약) - 정확성이 중요하므로 Gemini Pro 사용 (할당량 주의)
    news_summarization:
      provider: "gemini"
      model: "gemini-2.5-pro-preview-03-25"
      temperature: 0.3
      max_retries: 2
      timeout: 120
    
    # 섹션 재생성 (뉴스 링크 → 섹션 요약) - 구조화된 작업이므로 Anthropic 사용
    section_regeneration:
      # provider: "anthropic"
      # model: "claude-3-7-sonnet-latest"
      provider: "gemini"
      model: "gemini-2.5-pro-preview-03-25"
      temperature: 0.3
      max_retries: 2
      timeout: 120
    
    # 뉴스레터 소개 생성 - 자연스러운 글쓰기를 위해 Anthropic 사용
    introduction_generation:
      # provider: "anthropic"
      # model: "claude-3-7-sonnet-latest"
      provider: "gemini"
      model: "gemini-2.5-flash-preview-05-20"
      temperature: 0.4
      max_retries: 2
      timeout: 60
    
    # HTML 생성 체인 (최종 뉴스레터 생성) - 복잡한 구조화 작업이므로 최신 Gemini 사용
    html_generation:
      provider: "gemini"
      model: "gemini-2.5-pro-preview-03-25"
      temperature: 0.2
      max_retries: 2
      timeout: 180
    
    # 기사 점수 매기기 - 빠른 판단이 중요하므로 Gemini Flash 사용
    article_scoring:
      provider: "gemini"
      model: "gemini-2.5-flash-preview-05-20"
      temperature: 0.1
      max_retries: 2
      timeout: 30
    
    # 번역 작업 - 정확성이 중요하므로 최신 Pro 모델 시도
    translation:
      provider: "gemini"
      model: "gemini-2.5-pro-preview-03-25"
      temperature: 0.1
      max_retries: 2
      timeout: 60
  
  # 제공자별 모델 설정
  provider_models:
    gemini:
      fast: "gemini-2.5-flash-preview-05-20"
      standard: "gemini-1.5-pro"
      advanced: "gemini-2.5-pro-preview-03-25"
    
    openai:
      fast: "gpt-4o-mini"
      standard: "gpt-4o"
      advanced: "gpt-4o"
    
    anthropic:
      fast: "claude-3-5-haiku-latest"
      standard: "claude-3-7-sonnet-latest"
      advanced: "claude-sonnet-4-20250514"

# Distribution settings for GitHub Actions
distribution:
  # Email settings
  send_email: true # Set to true to enable email sending
  email_recipients: # List of email addresses to send the newsletter to
    - "user1@example.com"
    - "user2@example.com"
  # Alternatively, you can store a comma-separated list in a GitHub Secret
  # and your script can be adapted to read it if needed.

  # GitHub Pages settings
  deploy_to_gh_pages: true # Set to true to deploy the newsletter to GitHub Pages

  # GitHub Artifact settings
  upload_artifact: true # Set to true to upload the newsletter as a workflow artifact

# Article scoring weights
scoring:
  relevance: 0.35
  impact: 0.25
  novelty: 0.15
  source_tier: 0.15
  recency: 0.10
